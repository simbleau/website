name: Release Tagged
on:
  push:
    tags: ["v*"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Trunk
        uses: jetli/trunk-action@v0.4.0
        with:
          version: "latest"

      - name: Build | Trunk
        run: trunk build --release

      - name: Post Setup | Upload dist
        uses: actions/upload-artifact@v2
        with:
          path: ./dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Download dist
        uses: actions/download-artifact@v2
      - name: Setup | Place dist
        run: mv ./artifact/ ./dist/

      - name: Release | Prepare artifacts
        run: |
          tar czvf dist.tar.gz dist
          zip -9 -r dist.zip dist

      - name: Release | Create checksums
        run: |
          openssl dgst -sha256 -r dist.tar.gz | awk '{print $1}' > dist.tar.gz.sha256
          openssl dgst -sha256 -r dist.zip | awk '{print $1}' > dist.zip.sha256

      - name: Release | Tagged
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            dist.tar.gz
            dist.tar.gz.sha256
            dist.zip
            dist.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dockerhub:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup | Get version tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup | Download dist
        uses: actions/download-artifact@v2
      - name: Setup | Place dist
        run: mv ./artifact/ ./dist/

      - name: Setup | QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup | Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup | DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Release | DockerHub Push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./CI.Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: |
            simbleau/website:${{ env.RELEASE_VERSION }}
